// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id          String                     @id @default(uuid())
  username    String                     @unique
  password    String
  name        String
  imageURL    String
  performance Performance[]
  appointment AppointmentPatientDoctor[]
}

model Doctor {
  id             String                     @id @default(uuid())
  username       String                     @unique
  password       String
  specialization String
  name           String
  imageURL       String
  hospital       String
  performance    Performance[]
  appointment    AppointmentPatientDoctor[]
}

model Performance {
  score         Float
  comment       String
  waitTime      Int?
  serviceTime   Int?
  doctorId      String
  doctor        Doctor                   @relation(fields: [doctorId], references: [id])
  patientId     String
  patient       Patient                  @relation(fields: [patientId], references: [id])
  appointmentId String
  appointment   AppointmentPatientDoctor @relation(fields: [appointmentId], references: [id])

  @@id(appointmentId)
}

model AppointmentPatientDoctor {
  id           String         @id @default(uuid())
  patient      Patient        @relation(fields: [patientId], references: [id])
  patientId    String
  doctor       Doctor         @relation(fields: [doctorId], references: [id])
  doctorId     String
  createdAt    DateTime?
  calledAt     DateTime?
  doneAt       DateTime?
  reason       String
  status       Status         @default(Pending)
  performance  Performance[]
  notification Notification[]
}

model Notification {
  id            String                   @id @default(uuid())
  appointmentId String
  appointment   AppointmentPatientDoctor @relation(fields: [appointmentId], references: [id])
  senderId      String
  targetId      String
  message       String
  isRead        Boolean                  @default(false)
  createdAt     DateTime                 @default(now())
}

enum Status {
  Pending
  Ongoing
  Done
}
